{"version":3,"sources":["components/Notification/index.jsx","components/NewProjectPage/ProjectForm.jsx","components/NewProjectPage/index.js"],"names":["Alert","props","elevation","variant","Notification","options","msg","open","handleClose","type","autoHideDuration","onClose","severity","useStyles","makeStyles","input","marginBottom","ProjectForm","onSubmit","pending","useState","value","title","setTitle","goal","setGoal","duration","setDuration","image","setImage","description","setDescription","handleChange","old","newValue","setFun","classes","e","preventDefault","length","err","errMsg","goalNum","TextField","label","fullWidth","error","helperText","className","autoFocus","onChange","target","Typography","id","gutterBottom","Slider","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","multiline","rows","Grid","container","justify","Button","color","size","Box","px","py","alignItems","style","marginRight","CircularProgress","NewProjectPage","web3","account","campaignFactory","notification","setNotification","setPending","redirect","setRedirect","document","to","Container","component","align","maxWidth","mx","mt","data","a","async","methods","campaignPrice","call","newCampaign","utils","toWei","toString","send","from"],"mappings":"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","file":"static/js/8.290e056d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Notification = (options = {}) => {\r\n  const {\r\n    msg = \"Hello World\",\r\n    open = false,\r\n    handleClose = () => {},\r\n    type = \"info\"\r\n  } = options;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={type}>\r\n        {msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Slider,\r\n  makeStyles,\r\n  CircularProgress,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    marginBottom: 28\r\n  }\r\n});\r\n\r\nconst ProjectForm = ({ onSubmit, pending }) => {\r\n  const [title, setTitle] = useState({ value: \"\" });\r\n  const [goal, setGoal] = useState({ value: 2 });\r\n  const [duration, setDuration] = useState({ value: 10 });\r\n  const [image, setImage] = useState({ value: \"\" });\r\n  const [description, setDescription] = useState({ value: \"\" });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    //Validate Input\r\n    if (title.value.length < 3) {\r\n      setTitle({\r\n        ...title,\r\n        err: true,\r\n        errMsg: \"Title Must be at least 3 characters\"\r\n      });\r\n      return;\r\n    } else setTitle({ value: title.value });\r\n    let goalNum = +goal.value;\r\n\r\n    if (!goalNum || goalNum <= 0 || goalNum > 10000000) {\r\n      setGoal({\r\n        ...goal,\r\n        err: true,\r\n        errMsg: \"Goal must range between 0 & 10000000\"\r\n      });\r\n      return;\r\n    } else setGoal({ value: goal.value });\r\n\r\n    onSubmit({\r\n      title: title.value,\r\n      goal: goal.value,\r\n      duration: duration.value,\r\n      image: image.value,\r\n      description: description.value\r\n    });\r\n  };\r\n\r\n  const handleChange = (old, newValue, setFun) => {\r\n    setFun({ ...old, value: newValue });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Project Title\"\r\n        fullWidth\r\n        error={title.err}\r\n        helperText={title.errMsg}\r\n        //required\r\n        className={classes.input}\r\n        autoFocus\r\n        variant=\"outlined\"\r\n        value={title.value}\r\n        onChange={e => handleChange(title, e.target.value, setTitle)}\r\n      />\r\n      <TextField\r\n        label=\"Campaign Goal (Ether)\"\r\n        fullWidth\r\n        //required\r\n        error={goal.err}\r\n        helperText={goal.errMsg}\r\n        className={classes.input}\r\n        variant=\"outlined\"\r\n        value={goal.value}\r\n        onChange={e => handleChange(goal, e.target.value, setGoal)}\r\n      />\r\n      <div className={classes.input}>\r\n        <Typography id=\"duration-slider\" gutterBottom>\r\n          Campaign Duration (Days)\r\n        </Typography>\r\n        <Slider\r\n          value={duration.value}\r\n          onChange={(_, value) => handleChange(duration, value, setDuration)}\r\n          aria-labelledby=\"duration-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={1}\r\n          max={20}\r\n        />\r\n      </div>\r\n      <TextField\r\n        label=\"Project Image Url\"\r\n        fullWidth\r\n        //required\r\n        className={classes.input}\r\n        variant=\"outlined\"\r\n        value={image.value}\r\n        onChange={e => handleChange(image, e.target.value, setImage)}\r\n      />\r\n      <TextField\r\n        label=\"Project Description\"\r\n        fullWidth\r\n        //required\r\n        className={classes.input}\r\n        variant=\"outlined\"\r\n        multiline\r\n        rows={12}\r\n        value={description.value}\r\n        onChange={e =>\r\n          handleChange(description, e.target.value, setDescription)\r\n        }\r\n      />\r\n      <Grid container justify=\"center\">\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">\r\n          Publish Campaign\r\n        </Button>\r\n      </Grid>\r\n      {pending && (\r\n        <Box px={3} py={4}>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"textSecondary\"\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              Pending\r\n            </Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Typography, Box } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst NewProjectPage = ({ web3, account, campaignFactory }) => {\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    msg: \"Hello World\"\r\n  });\r\n  const [pending, setPending] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  //Creates a new Campaing on the blockchain after reciving the data\r\n  const onSubmit = async data => {\r\n    const { title, image, description, goal, duration } = data;\r\n    try {\r\n      const campaignPrice = await campaignFactory.methods\r\n        .campaignPrice()\r\n        .call({});\r\n      setPending(true);\r\n      await campaignFactory.methods\r\n        .newCampaign(\r\n          title,\r\n          description,\r\n          image,\r\n          web3.utils.toWei(goal.toString(), \"Ether\"),\r\n          +duration * 24 * 3600 //convert to seconds\r\n        )\r\n        .send({ from: account, value: campaignPrice });\r\n      setRedirect(true);\r\n    } catch (error) {\r\n      setNotification({\r\n        open: true,\r\n        msg: \"Failed To Launch Campaign\",\r\n        type: \"error\"\r\n      });\r\n    }\r\n  };\r\n\r\n  document.title = \"Kickstarter New Campaign\";\r\n\r\n  if (redirect) return <Redirect to=\"/\" />;\r\n  return (\r\n    <Box py={10}>\r\n      <Container>\r\n        <Typography variant=\"h2\" component=\"h1\" color=\"primary\" align=\"center\">\r\n          Start A Campaign\r\n        </Typography>\r\n        <Box maxWidth={400} mx={\"auto\"} mt={10}>\r\n          <ProjectForm onSubmit={onSubmit} pending={pending} />\r\n        </Box>\r\n        <Notification\r\n          {...notification}\r\n          handleClose={() => setNotification({ ...notification, open: false })}\r\n        />\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewProjectPage;\r\n"],"sourceRoot":""}